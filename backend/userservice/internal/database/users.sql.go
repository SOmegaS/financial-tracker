// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: users.sql

package database

import (
	"context"

	"github.com/google/uuid"
)

const createUser = `-- name: CreateUser :exec
INSERT INTO users (id, username, password)
VALUES ($1, $2, $3)
`

type CreateUserParams struct {
	ID       uuid.UUID
	Username string
	Password string
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) error {
	_, err := q.db.ExecContext(ctx, createUser, arg.ID, arg.Username, arg.Password)
	return err
}

const getUserIdPassword = `-- name: GetUserIdPassword :one
SELECT id, password
FROM users
WHERE username = $1
`

type GetUserIdPasswordRow struct {
	ID       uuid.UUID
	Password string
}

func (q *Queries) GetUserIdPassword(ctx context.Context, username string) (GetUserIdPasswordRow, error) {
	row := q.db.QueryRowContext(ctx, getUserIdPassword, username)
	var i GetUserIdPasswordRow
	err := row.Scan(&i.ID, &i.Password)
	return i, err
}
