apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres-primary
  labels:
    app.kubernetes.io/component: postgres-primary
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}-postgres-primary
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: postgres-primary
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: postgres-primary
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.primary.user | quote }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-secrets
              key: primary-password
        - name: POSTGRES_DB
          value: {{ .Values.postgres.primary.database | quote }}
        - name: POSTGRES_HOST_AUTH_METHOD
          value: "scram-sha-256"
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=scram-sha-256"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        # УДАЛИТЬ весь блок command: !!!
#        command:
#        - postgres
#        - -c
#        - wal_level=replica
#        - -c
#        - hot_standby=on
#        - -c
#        - max_wal_senders=10
#        - -c
#        - max_replication_slots=10
#        - -c
#        - hot_standby_feedback=on
        args:
        - "-c"
        - "wal_level=replica"
        - "-c"
        - "hot_standby=on"
        - "-c"
        - "max_wal_senders=10"
        - "-c"
        - "max_replication_slots=10"
        - "-c"
        - "hot_standby_feedback=on"
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: init-scripts
        configMap:
          name: {{ .Release.Name }}-postgres-init
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgres.primary.storage | default "1Gi" }}
