apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-user-service
  labels:
    app.kubernetes.io/component: user-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: user-service
  template:
    metadata:
      labels:
        app.kubernetes.io/component: user-service
      annotations:
        traefik.ingress.kubernetes.io/router.entrypoints: http
        traefik.ingress.kubernetes.io/router.rule: Headers(`target`, `user-service`)
    spec:
      containers:
      - name: user-service
        image: {{ .Values.services.userServiceImage }}
        env:
        - name: DB_HOST
          value: {{ .Release.Name }}-postgres-users
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: {{ .Values.postgres.users.user | quote }}
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-secrets
              key: users-password
        - name: DB_NAME
          value: {{ .Values.postgres.users.database | quote }}
        ports:
        - containerPort: 7777
        readinessProbe:
          httpGet:
            path: /health
            port: 7777
          initialDelaySeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-user-service
spec:
  ports:
  - port: 7777
    targetPort: 7777
  selector:
    app.kubernetes.io/component: user-service
