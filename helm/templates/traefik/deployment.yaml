apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-traefik
  labels:
    app.kubernetes.io/name: traefik
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: traefik
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/name: traefik
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: traefik
        image: {{ .Values.traefik.image | quote }}
        args:
        - "--api.insecure=true"
        - "--providers.kubernetesingress"
        - "--entrypoints.http.address=:80"
        - "--accesslog"
        ports:
        - name: http
          containerPort: 80
          protocol: TCP
        - name: admin
          containerPort: 8080
          protocol: TCP
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
        readinessProbe:
          httpGet:
            path: /ping
            port: admin
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /ping
            port: admin
          initialDelaySeconds: 15
          periodSeconds: 20
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
