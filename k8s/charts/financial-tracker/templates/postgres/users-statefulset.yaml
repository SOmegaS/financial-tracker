apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-postgres-users
  labels:
    app.kubernetes.io/component: postgres-users
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  serviceName: {{ .Release.Name }}-postgres-users
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: postgres-users
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: postgres-users
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      containers:
      - name: postgres
        imagePullPolicy: IfNotPresent
        image: postgres:latest
        env:
        - name: POSTGRES_USER
          value: {{ .Values.postgres.users.user | quote }}
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-postgres-secrets
              key: users-password
        - name: POSTGRES_DB
          value: {{ .Values.postgres.users.database | quote }}
        - name: PGPORT
          value: "5432"
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - pg_isready -U $(POSTGRES_USER) -d $(POSTGRES_DB)
          initialDelaySeconds: 5
          periodSeconds: 5
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.postgres.users.storage | default "1Gi" }}
